#!/usr/bin/env python3
#
# Sintaxis: ./httpServer
#           ./httpServer 0.0.0.0:8080 path_to_serve

from http.server import HTTPServer, BaseHTTPRequestHandler
from sys import argv
import os
import urllib.parse
import mimetypes

BIND_HOST = "localhost"
PORT = 8080
ROOT_PATH= '.'


class SimpleHTTPGETRequestHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        path = urllib.parse.urlparse(self.path).path
        pathCompleto = os.path.abspath(os.path.join(ROOT_PATH, path.strip("/")))

        if not os.path.exists(pathCompleto) or not os.path.isfile(pathCompleto):
            self.send_error(404, f"Archivo {path} no encontrado")
            return

        tipoMime, _ = mimetypes.guess_type(pathCompleto)
        if tipoMime is None:
            tipoMime = 'application/octet-stream'

        try:
            with open(pathCompleto, 'rb') as archivo:
                contenido = archivo.read()
            self.send_response(200)
            self.send_header('Content-type', tipoMime)
            self.end_headers()
            self.wfile.write(contenido)
        except Exception as e:
            self.send_error(500, f"Error: {str(e)}")


if len(argv) > 1:
    print(argv)
    arg = argv[1].split(":")
    BIND_HOST = arg[0]
    PORT = int(arg[1])
    ROOT_PATH=argv[2]

ROOT_PATH = os.path.abspath(ROOT_PATH)

print(f"Escuchando http://{BIND_HOST}:{PORT}\n")
print(f"Sirviendo '{ROOT_PATH}'\n")
httpd = HTTPServer((BIND_HOST, PORT), SimpleHTTPGETRequestHandler)
httpd.serve_forever()
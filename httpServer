#!/usr/bin/env python3
#
# Sintaxis: ./httpServer
#           ./httpServer 0.0.0.0:8080 path_to_serve

from http.server import HTTPServer, BaseHTTPRequestHandler
from sys import argv
import os
import urllib.parse
import mimetypes
import json

BIND_HOST = "0.0.0.0"
PORT = int(os.getenv("MAGM_PORT", "8080"))  
ROOT_PATH = '.'


class SimpleHTTPGETRequestHandler(BaseHTTPRequestHandler):
    def do_OPTIONS(self):
        """ Responde a las solicitudes OPTIONS para CORS """
        self.send_response(200)
        self.send_header("Access-Control-Allow-Origin", "*")
        self.send_header("Access-Control-Allow-Methods", "GET, OPTIONS")
        self.send_header("Access-Control-Allow-Headers", "Content-Type")
        self.end_headers()

    def do_GET(self):
        path = urllib.parse.urlparse(self.path).path

        if path == "/health":
            self.send_response(200)
            self.send_header("Content-Type", "application/json")
            self.send_header("Access-Control-Allow-Origin", "*")
            self.end_headers()
            self.wfile.write(json.dumps({"status": "ok"}).encode("utf-8"))
            return

        # Servir archivos
        path_completo = os.path.abspath(os.path.join(ROOT_PATH, path.strip("/")))

        if not os.path.exists(path_completo) or not os.path.isfile(path_completo):
            self.send_error(404, f"Archivo {path} no encontrado")
            return

        tipo_mime, _ = mimetypes.guess_type(path_completo)
        if tipo_mime is None:
            tipo_mime = "application/octet-stream"

        try:
            with open(path_completo, "rb") as archivo:
                contenido = archivo.read()
            self.send_response(200)
            self.send_header("Content-Type", tipo_mime)
            self.send_header("Access-Control-Allow-Origin", "*")
            self.end_headers()
            self.wfile.write(contenido)
        except Exception as e:
            self.send_error(500, f"Error: {str(e)}")


if len(argv) > 1:
    arg = argv[1].split(":")
    BIND_HOST = arg[0]
    PORT = int(arg[1])
    ROOT_PATH = argv[2]

ROOT_PATH = os.path.abspath(ROOT_PATH)

print(f"Escuchando en http://{BIND_HOST}:{PORT}")
print(f"Sirviendo '{ROOT_PATH}'")

httpd = HTTPServer((BIND_HOST, PORT), SimpleHTTPGETRequestHandler)
httpd.serve_forever()
